## CycleHunter

* This code detects cyclic dependecies in DNS zones
* It has a series of steps

### TL;DR

To analyze a full zone, you can use `fireloop.py` as below

```
python fireloop.py --zonefile <ZONEFILE> --origin <ORIGIN> --save-file <FILE_TO_SAVE_AFFECTED_DOMAINS>
```

Where
- ZONEFILE is the file with the zone you want to analyze
- ORIGIN is the zone represented by the ZONEFILE, for example, *.COM* or *.NL*
- FILE_TO_SAVE_AFFECTED_DOMAINS is a JSON file that in the end will have the list of domains affected by full cycles

### If you like to do this by hand

`fireloop.py` wraps all the steps below, but if you still want to run them by hand, the process is:

1. Extract all NS records from the zone file

  * `python largeZoneParser.py $zonefile $output1 $TLD`

2. Query these NSes, and output those that timeout into `$output2`

  * `python CyclicDetector-NSONLY.py $output1 $output2`

3. Scrutinize each timed out NS, either parent or child, and see if which ones are really cyclic dependent into `output3`

  * `python  findCyclicDep.py $output2 $output3`

  * Note: $output3 is a json file with 3 categories of dependency. `fullDep` is the one very bad, but the other two can quickily become `fullDep`

4. Get only the fully cyclic dependent ones from `output3`

  * `python fullDepParser.py $output3 $output4`

`output4` has the zones that are cyclic dependent. These are likely parent zones of NSes

5. Determine how many zones are affected by cyclic dependency

    * `python zoneMacher.py $ouput4 $zoneFile $TLD $output5`
    * **Alternative version for com** : `zoneMatcher-com.py`

`output5` has all domains affected by cyclic dependency